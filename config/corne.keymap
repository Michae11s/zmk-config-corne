/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            hold-trigger-key-positions = <6 7 9 8 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 27 28 13 14>;
            flavor = "tap-preferred";
        };

        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 26 27 28 29 36 37 38>;
            flavor = "tap-preferred";
        };

        mo_to_layer: mo_to_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "MO_TO_LAYER";
            bindings = <&mo>, <&to>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        htShift: htShift {
            compatible = "zmk,behavior-hold-tap";
            label = "HTSHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            hold-trigger-key-positions = <6 7 9 8 6 7 8 9 10 18 19 20 21 22 30 31 32 33 34 39 40 27 28 13 14 25 26 1 2 3 4 5 17 16 15 29 37 38>;
            flavor = "tap-preferred";
        };
    };

    combos {
        compatible = "zmk,combos";

        comLauncher {
            bindings = <&kp LA(SPACE)>;
            key-positions = <37 38>;
        };

        To_Both_Layer {
            bindings = <&to 3>;
            key-positions = <36 41>;
        };

        comEscape {
            bindings = <&kp RIGHT_SHIFT>;
            key-positions = <40 39>;
        };

        Home {
            bindings = <&to 0>;
            key-positions = <38 39>;
        };

        ctrl_alt_delete {
            bindings = <&kp LC(LA(DEL))>;
            key-positions = <15 14 0>;
        };

        numlock {
            bindings = <&kp KP_NUMLOCK>;
            key-positions = <0 11>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp GRAVE                   &kp Q            &kp W            &kp E         &kp R          &kp T        &kp Y    &kp U      &kp I         &kp O             &kp P                     &kp BACKSLASH
&htShift LEFT_SHIFT ESCAPE  &hml LEFT_GUI A  &hml LEFT_ALT S  &hml LCTRL D  &kp F          &kp G        &kp H    &kp J      &hmr RCTRL K  &hmr RIGHT_ALT L  &hmr RIGHT_GUI SEMICOLON  &htShift RIGHT_SHIFT SQT
&kp LEFT_GUI                &kp Z            &kp X            &kp C         &kp V          &kp B        &kp N    &kp M      &kp COMMA     &kp DOT           &kp FSLH                  &kp RIGHT_WIN
                                                              &mo 1         &kp BACKSPACE  &kp ENTER    &kp TAB  &kp SPACE  &mo 2
            >;
        };

        Left_Layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp DEL  &kp FSLH      &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp MINUS          &bt BT_SEL 0   &kp C_MUTE  &kp C_VOLUME_UP  &kp C_VOLUME_DOWN  &kp C_PLAY_PAUSE  &bt BT_SEL 3
&trans   &kp PERIOD    &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp PLUS           &bt BT_SEL 1   &kp LEFT    &kp UP_ARROW     &kp DOWN           &kp RIGHT         &bt BT_SEL 4
&trans   &kp ASTERISK  &kp KP_NUMBER_1  &kp KP_N2        &kp KP_N3        &kp KP_NUMBER_0    &bt BT_SEL 2   &kp HOME    &kp PG_UP        &kp PAGE_DOWN      &kp END           &bt BT_CLR
                                        &trans           &trans           &trans             &kp RIGHT_ALT  &kp RCTRL   &kp RIGHT_SHIFT
            >;
        };

        Right_Layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp F1  &kp F2            &kp F3             &kp F4          &kp F5           &kp F6          &kp F7     &kp F8            &kp F9             &kp F10               &kp F11                &kp F12
&trans  &kp EXCL          &kp AT_SIGN        &kp HASH        &kp DOLLAR       &kp PERCENT     &kp CARET  &kp AMPERSAND     &kp ASTERISK       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp EQUAL       &kp UNDER  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans
                                             &trans          &kp DELETE       &kp CAPSLOCK    &trans     &trans            &trans
            >;
        };

        Game_Layer {
            bindings = <
&kp GRAVE  &kp TAB         &kp Q  &kp W  &kp E      &kp R           &kp T   &kp Y   &kp U  &kp I      &kp O    &kp P
&trans     &kp LEFT_SHIFT  &kp A  &kp S  &kp D      &kp F           &kp G   &kp H   &kp J  &kp K      &kp L    &kp SEMI
&none      &kp LCTRL       &kp Z  &kp X  &kp C      &kp V           &kp B   &kp N   &kp M  &kp COMMA  &kp DOT  &kp FSLH
                                  &mo 4  &kp SPACE  &kp LEFT_ALT    &trans  &trans  &none
            >;
        };

        Game_Alt_Layer {
            bindings = <
&trans  &kp N1   &kp N2  &kp N3         &kp N4     &kp N5    &trans  &kp C_MUTE  &kp C_VOLUME_UP  &kp C_VOL_DN  &trans  &trans
&trans  &kp N6   &kp N7  &kp N8         &kp N9     &kp N0    &trans  &trans      &trans           &trans        &trans  &trans
&trans  &kp ESC  &kp M   &kp BACKSLASH  &kp GRAVE  &trans    &trans  &trans      &trans           &trans        &trans  &trans
                         &trans         &trans     &trans    &trans  &trans      &trans
            >;
        };
    };
};
