/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <6 7 9 8 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
        };

        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 26 27 28 29 36 37 38>;
        };

        mo_to_layer: mo_to_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "MO_TO_LAYER";
            bindings = <&mo>, <&to>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Left_GUI {
            bindings = <&kp LEFT_GUI>;
            key-positions = <37 38>;
        };

        To_Both_Layer {
            bindings = <&to 3>;
            key-positions = <36 41>;
        };

        comEscape {
            bindings = <&kp ESC>;
            key-positions = <40 39>;
        };

        Home {
            bindings = <&to 0>;
            key-positions = <38 39>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp GRAVE  &kp Q            &kp W            &kp E             &kp R              &kp T      &kp Y       &kp U               &kp I             &kp O             &kp P                     &kp BACKSLASH
&kp UNDER  &hml LEFT_GUI A  &hml LEFT_ALT S  &hml LCTRL D      &hml LEFT_SHIFT F  &kp G      &kp H       &hmr RIGHT_SHIFT J  &hmr RCTRL K      &hmr RIGHT_ALT L  &hmr RIGHT_GUI SEMICOLON  &kp SQT
&kp ESC    &kp Z            &kp X            &kp C             &kp V              &kp B      &kp N       &kp M               &kp COMMA         &kp DOT           &kp FSLH                  &kp DELETE
                                             &mo_to_layer 1 1  &kp BACKSPACE      &kp TAB    &kp RETURN  &kp SPACE           &mo_to_layer 2 2
            >;
        };

        Left_Layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB  &kp FSLH                &kp N7                  &kp N8         &kp N9                    &kp MINUS    &trans     &trans     &trans    &trans     &trans  &trans
&trans   &hml LEFT_GUI ASTERISK  &hml LEFT_ALT NUMBER_4  &hml LCTRL N5  &hml LEFT_SHIFT NUMBER_6  &kp PLUS     &kp PG_UP  &kp PG_DN  &kp HOME  &kp END    &trans  &trans
&trans   &kp BSPC                &kp N1                  &kp N2         &kp N3                    &kp DOT      &kp UP     &kp DOWN   &kp LEFT  &kp RIGHT  &trans  &trans
                                                         &trans         &kp N0                    &kp ENTER    &trans     &trans     &trans
            >;
        };

        Right_Layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp F1  &kp F2            &kp F3             &kp F4          &kp F5           &kp F6         &kp F7     &kp F8            &kp F9             &kp F10               &kp F11                &kp F12
&none   &kp EXCL          &kp AT_SIGN        &kp HASH        &kp DOLLAR       &kp PERCENT    &kp CARET  &kp AMPERSAND     &kp ASTERISK       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&none   &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE  &none          &kp UNDER  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans
                                             &trans          &trans           &trans         &trans     &trans            &trans
            >;
        };

        Game_Layer {
            bindings = <
&kp TAB         &kp Q  &kp W  &kp E         &kp R      &kp T               &kp Y   &kp U   &kp I      &kp O    &kp P     &kp BACKSLASH
&mo 4           &kp A  &kp S  &kp D         &kp F      &kp G               &kp H   &kp J   &kp K      &kp L    &kp SEMI  &kp BACKSPACE
&kp LEFT_SHIFT  &kp Z  &kp X  &kp C         &kp V      &kp B               &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH  &none
                              &kp LEFT_ALT  &kp SPACE  &kp LEFT_CONTROL    &trans  &trans  &none
            >;
        };

        Game_Alt_Layer {
            bindings = <
&trans  &kp N1   &kp N2  &kp N3         &kp N4     &kp N5    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp N6   &kp N7  &kp N8         &kp N9     &kp N0    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp ESC  &kp M   &kp BACKSLASH  &kp GRAVE  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                         &trans         &trans     &trans    &trans  &trans  &trans
            >;
        };
    };
};
